@model generateCode.Controllers.CodeTemplate

@{
    ViewData["Title"] = "Create Template";
}

<div class="container mt-4">
    <h2>Create Template</h2>
    
    <form asp-action="Create" method="post" id="createForm">
        <div class="form-group mb-3">
            <label asp-for="Name" class="form-label">Template Name</label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        
        <div class="form-group mb-3">
            <label asp-for="Namespace" class="form-label">Namespace</label>
            <input asp-for="Namespace" class="form-control" />
            <span asp-validation-for="Namespace" class="text-danger"></span>
        </div>
        
        <div class="card mb-3">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Fields</h5>
                <button type="button" class="btn btn-sm btn-primary" onclick="addField()">Add Field</button>
            </div>
            <div class="card-body">
                <div id="fieldsContainer">
                    <!-- Fields will be added here dynamically -->
                </div>
            </div>
        </div>
        
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Create</button>
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        const csharpTypes = @Json.Serialize(ViewBag.CSharpTypes);
        let fieldCount = 0;
        
        function addField() {
            const container = document.getElementById('fieldsContainer');
            const fieldDiv = document.createElement('div');
            fieldDiv.className = 'row mb-3 field-row';
            fieldDiv.innerHTML = `
                <input type="hidden" name="Fields[${fieldCount}].Id" value="0" />
                <div class="col-md-4">
                    <input type="text" name="Fields[${fieldCount}].Name" class="form-control" placeholder="Field Name" required />
                </div>
                <div class="col-md-3">
                    <select name="Fields[${fieldCount}].DataType" class="form-select" required>
                        <option value="">Select Type</option>
                        ${csharpTypes.map(type => `<option value="${type}">${type}</option>`).join('')}
                    </select>
                </div>
                <div class="col-md-3">
                    <div class="form-check mt-2">
                        <input type="checkbox" name="Fields[${fieldCount}].IsRequired" class="form-check-input" />
                        <label class="form-check-label">Required</label>
                    </div>
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-sm btn-danger" onclick="removeField(this)">Remove</button>
                </div>
            `;
            container.appendChild(fieldDiv);
            fieldCount++;
        }
        
        function removeField(button) {
            button.closest('.field-row').remove();
        }
    </script>
} 