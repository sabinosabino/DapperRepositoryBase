@using generateCode.Controllers
@model TableMetadata

@{
    ViewData["Title"] = "Edit Table";
}

<div class="container-fluid">
    <h2>Edit Table</h2>
    <hr />
    
    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="TableName" class="form-label">Table Name</label>
                    <input asp-for="TableName" class="form-control" />
                    <span asp-validation-for="TableName" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Namespace" class="form-label">Namespace</label>
                    <input asp-for="Namespace" class="form-control" />
                    <span asp-validation-for="Namespace" class="text-danger"></span>
                </div>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-md-12">
                <h4>Columns</h4>
                <div class="table-responsive">
                    <table class="table table-striped" id="columnsTable">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Data Type</th>
                                <th>Nullable</th>
                                <th>Primary Key</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Columns.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input type="hidden" name="Columns[@i].Id" value="@Model.Columns[i].Id" />
                                        <input type="hidden" name="Columns[@i].TableId" value="@Model.Columns[i].TableId" />
                                        <input type="text" class="form-control" name="Columns[@i].ColumnName" value="@Model.Columns[i].ColumnName" required />
                                    </td>
                                    <td>
                                        <select class="form-select" name="Columns[@i].DataType">
                                            @foreach (var type in ViewBag.CSharpTypes)
                                            {
                                                <option value="@type" selected="@(type == Model.Columns[i].DataType)">@type</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="Columns[@i].IsNullable" value="true" @(Model.Columns[i].IsNullable ? "checked" : "") />
                                            <input type="hidden" name="Columns[@i].IsNullable" value="false" />
                                        </div>
                                    </td>
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="Columns[@i].IsPrimaryKey" value="true" @(Model.Columns[i].IsPrimaryKey ? "checked" : "") />
                                            <input type="hidden" name="Columns[@i].IsPrimaryKey" value="false" />
                                        </div>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="removeColumn(this)">Remove</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                
                <button type="button" class="btn btn-success" onclick="addColumn()">Add Column</button>
            </div>
        </div>
        
        <div class="row mt-4">
            <div class="col-md-12">
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function addColumn() {
            var index = $('#columnsTable tbody tr').length;
            var types = '@Html.Raw(Json.Serialize(ViewBag.CSharpTypes))';
            var typeOptions = JSON.parse(types).map(function(type) {
                return `<option value="${type}">${type}</option>`;
            }).join('');
            
            var newRow = `
                <tr>
                    <td>
                        <input type="hidden" name="Columns[${index}].Id" value="0" />
                        <input type="hidden" name="Columns[${index}].TableId" value="@Model.Id" />
                        <input type="text" class="form-control" name="Columns[${index}].ColumnName" required />
                    </td>
                    <td>
                        <select class="form-select" name="Columns[${index}].DataType">
                            ${typeOptions}
                        </select>
                    </td>
                    <td>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="Columns[${index}].IsNullable" value="true" />
                            <input type="hidden" name="Columns[${index}].IsNullable" value="false" />
                        </div>
                    </td>
                    <td>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="Columns[${index}].IsPrimaryKey" value="true" />
                            <input type="hidden" name="Columns[${index}].IsPrimaryKey" value="false" />
                        </div>
                    </td>
                    <td>
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeColumn(this)">Remove</button>
                    </td>
                </tr>
            `;
            
            $('#columnsTable tbody').append(newRow);
        }
        
        function removeColumn(button) {
            $(button).closest('tr').remove();
            reindexColumns();
        }
        
        function reindexColumns() {
            $('#columnsTable tbody tr').each(function(index) {
                $(this).find('input, select').each(function() {
                    var name = $(this).attr('name');
                    if (name) {
                        $(this).attr('name', name.replace(/\[\d+\]/, '[' + index + ']'));
                    }
                });
            });
        }
    </script>
} 