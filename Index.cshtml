@using generateCode.Controllers
@model IEnumerable<TableMetadata>

@{
    ViewData["Title"] = "Code Templates";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col">
            <h2>Tables</h2>
        </div>
        <div class="col text-end">
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#connectionStringsModal">
                Connection Strings
            </button>
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#databaseTablesModal">
                Database Tables
            </button>
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Table Name</th>
                    <th>Namespace</th>
                    <th>Columns</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var table in Model.OrderBy(t => t.TableName))
                {
                    <tr>
                        <td>@table.TableName</td>
                        <td>@table.Namespace</td>
                        <td>
                            <ul class="list-unstyled">
                                @foreach (var column in table.Columns)
                                {
                                    <li>
                                        @column.ColumnName (@column.DataType)
                                        @if (column.IsPrimaryKey)
                                        {
                                            <span class="badge bg-primary">PK</span>
                                        }
                                        @if (column.IsNullable)
                                        {
                                            <span class="badge bg-secondary">Nullable</span>
                                        }
                                    </li>
                                }
                            </ul>
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", new { id = table.Id })" class="btn btn-primary btn-sm">Edit</a>
                            <button class="btn btn-success btn-sm generate-model" data-id="@table.Id">Generate Model</button>
                            <button class="btn btn-info btn-sm generate-repository" data-id="@table.Id">Generate Repository</button>
                            <button class="btn btn-danger btn-sm delete-table" data-id="@table.Id">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Connection Strings Modal -->
<div class="modal fade" id="connectionStringsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Connection Strings</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <button type="button" class="btn btn-primary mb-3" id="btnAddConnectionString">Add New</button>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Value</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="connectionStringsList">
                            <!-- Connection strings will be loaded here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Connection String Form Modal -->
<div class="modal fade" id="connectionStringFormModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Connection String</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="connectionStringForm">
                    <input type="hidden" id="connectionStringId" name="Id" value="0" />
                    <div class="mb-3">
                        <label for="connectionStringName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="connectionStringName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="connectionStringValue" class="form-label">Value</label>
                        <input type="text" class="form-control" id="connectionStringValue" name="Value" required>
                    </div>
                    <div class="mb-3">
                        <label for="connectionStringDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="connectionStringDescription" name="Description"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="btnSaveConnectionString">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Database Tables Modal -->
<div class="modal fade" id="databaseTablesModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Database Tables</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <h6>Tables</h6>
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Table Name</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="tableList">
                                    <!-- Tables will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-12">
                        <h6>Columns</h6>
                        <div class="table-responsive">
                            <table class="table table-striped" id="columnsTable">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Data Type</th>
                                        <th>Nullable</th>
                                        <th>Primary Key</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Columns will be loaded here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div id="saveTableSection" class="row mt-3" style="display: none;">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-success" onclick="saveTable()">Save Table</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Variáveis globais
        var selectedTableName = '';
        var selectedColumns = [];

        // Função global para carregar colunas
        function loadTableColumns(tableName) {
            selectedTableName = tableName;
            $.get('/CodeTemplate/GetTableColumns', { tableName: tableName }, function(response) {
                if (response.success) {
                    selectedColumns = response.data;
                    var columnsTable = $('#columnsTable tbody');
                    columnsTable.empty();
                    
                    if (response.data && response.data.length > 0) {
                        response.data.forEach(function(column) {
                            columnsTable.append(`
                                <tr>
                                    <td>${column.name}</td>
                                    <td>${column.dataType}</td>
                                    <td>${column.isNullable ? 'Yes' : 'No'}</td>
                                    <td>${column.isPrimaryKey ? 'Yes' : 'No'}</td>
                                </tr>
                            `);
                        });
                        
                        // Mostrar o botão de salvar
                        $('#saveTableSection').show();
                    } else {
                        columnsTable.append('<tr><td colspan="4">No columns found</td></tr>');
                        $('#saveTableSection').hide();
                    }
                } else {
                    alert('Error loading columns: ' + response.message);
                }
            }).fail(function(jqXHR, textStatus, errorThrown) {
                console.error('Error:', textStatus, errorThrown);
                alert('Error loading columns. Please check the console for details.');
            });
        }

        // Função global para salvar tabela
        function saveTable() {
            if (!selectedTableName || !selectedColumns || selectedColumns.length === 0) {
                alert('Please select a table and its columns first');
                return;
            }

            var data = {
                tableName: selectedTableName,
                columns: selectedColumns
            };

            $.ajax({
                url: '/CodeTemplate/SaveTable',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function(response) {
                    if (response.success) {
                        alert('Table saved successfully!');
                        $('#databaseTablesModal').modal('hide');
                        location.reload(); // Recarrega a página para mostrar a nova tabela
                    } else {
                        alert('Error saving table: ' + response.message);
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error:', textStatus, errorThrown);
                    alert('Error saving table. Please check the console for details.');
                }
            });
        }

        $(document).ready(function() {
            // Carregar connection strings quando o modal for aberto
            $('#connectionStringsModal').on('show.bs.modal', function() {
                loadConnectionStrings();
            });
            
            // Carregar tabelas do banco de dados quando o modal for aberto
            $('#databaseTablesModal').on('show.bs.modal', function() {
                loadDatabaseTables();
            });
            
            // Carregar connection strings
            function loadConnectionStrings() {
                $.get('/CodeTemplate/GetConnectionStrings', function(response) {
                    if (response.success) {
                        var data = response.data;
                        var tbody = $('#connectionStringsList');
                        tbody.empty();
                        
                        data.forEach(function(cs) {
                            tbody.append(`
                                <tr>
                                    <td>${cs.name}</td>
                                    <td>${cs.value}</td>
                                    <td>${cs.description || ''}</td>
                                    <td>
                                        <button class="btn btn-sm btn-primary" onclick="editConnectionString(${cs.id})">Edit</button>
                                        <button class="btn btn-sm btn-danger" onclick="deleteConnectionString(${cs.id})">Delete</button>
                                    </td>
                                </tr>
                            `);
                        });
                    } else {
                        alert('Error: ' + response.message);
                    }
                });
            }
            
            // Carregar tabelas do banco de dados
            function loadDatabaseTables() {
                $.get('/CodeTemplate/GetDatabaseTables', function(response) {
                    if (response.success) {
                        var data = response.data;
                        var tableList = $('#tableList');
                        tableList.empty();
                        
                        if (data && data.length > 0) {
                            data.forEach(function(table) {
                                tableList.append(`
                                    <tr>
                                        <td>${table}</td>
                                        <td>
                                            <button class="btn btn-sm btn-info" onclick="loadTableColumns('${table}')">View Columns</button>
                                        </td>
                                    </tr>
                                `);
                            });
                        } else {
                            tableList.append('<tr><td colspan="2">No tables found</td></tr>');
                        }
                    } else {
                        alert('Error loading tables: ' + response.message);
                    }
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    console.error('Error:', textStatus, errorThrown);
                    alert('Error loading tables. Please check the console for details.');
                });
            }
            
            // Adicionar nova connection string
            $('#btnAddConnectionString').click(function() {
                $('#connectionStringId').val(0);
                $('#connectionStringName').val('');
                $('#connectionStringValue').val('');
                $('#connectionStringDescription').val('');
                $('#connectionStringFormModal').modal('show');
            });
            
            // Salvar connection string
            $('#btnSaveConnectionString').click(function() {
                var form = $('#connectionStringForm')[0];
                var formData = new FormData(form);
                
                $.ajax({
                    url: '/CodeTemplate/SaveConnectionString',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            $('#connectionStringFormModal').modal('hide');
                            loadConnectionStrings();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    }
                });
            });

            // Usar delegação de eventos para os botões de geração
            $(document).on('click', '.generate-model', function() {
                var id = $(this).data('id');
                var button = $(this);
                
                $.post('@Url.Action("GenerateModel")', { id: id })
                    .done(function(response) {
                        if (response.success) {
                            alert('Model generated successfully!');
                        } else {
                            if (response.message === 'File already exists') {
                                if (confirm('The model file already exists. Do you want to overwrite it?')) {
                                    // Implementar lógica de sobrescrever se necessário
                                    alert('File already exists. Please rename or delete the existing file.');
                                }
                            } else {
                                alert('Error: ' + response.message);
                            }
                        }
                    })
                    .fail(function() {
                        alert('Error generating model');
                    });
            });

            $(document).on('click', '.generate-repository', function() {
                var id = $(this).data('id');
                var button = $(this);
                
                $.post('@Url.Action("GenerateRepository")', { id: id })
                    .done(function(response) {
                        if (response.success) {
                            alert('Repository generated successfully!');
                        } else {
                            if (response.message === 'File already exists') {
                                if (confirm('The repository file already exists. Do you want to overwrite it?')) {
                                    // Implementar lógica de sobrescrever se necessário
                                    alert('File already exists. Please rename or delete the existing file.');
                                }
                            } else {
                                alert('Error: ' + response.message);
                            }
                        }
                    })
                    .fail(function() {
                        alert('Error generating repository');
                    });
            });

            // Delete table
            $(document).on('click', '.delete-table', function() {
                var id = $(this).data('id');
                if (confirm('Are you sure you want to delete this table? This action cannot be undone.')) {
                    $.post('@Url.Action("Delete")', { id: id })
                        .done(function(response) {
                            if (response.success) {
                                alert(response.message);
                                location.reload();
                            } else {
                                alert('Error: ' + response.message);
                            }
                        })
                        .fail(function() {
                            alert('An error occurred while deleting the table.');
                        });
                }
            });
        });
        
        // Editar connection string
        function editConnectionString(id) {
            var row = $(`button[onclick="editConnectionString(${id})"]`).closest('tr');
            $('#connectionStringId').val(id);
            $('#connectionStringName').val(row.find('td:eq(0)').text());
            $('#connectionStringValue').val(row.find('td:eq(1)').text());
            $('#connectionStringDescription').val(row.find('td:eq(2)').text());
            $('#connectionStringFormModal').modal('show');
        }
        
        // Excluir connection string
        function deleteConnectionString(id) {
            if (confirm('Are you sure you want to delete this connection string?')) {
                $.post('/CodeTemplate/DeleteConnectionString', { id: id }, function(response) {
                    if (response.success) {
                        loadConnectionStrings();
                    } else {
                        alert('Error: ' + response.message);
                    }
                });
            }
        }
        
        // Excluir template
        function deleteTemplate(id) {
            if (confirm('Are you sure you want to delete this template?')) {
                $.post('/CodeTemplate/Delete', { id: id }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                });
            }
        }
    </script>
} 